#ip 3
00  seti 123 (0) 1       #  R1 = 123
01  bani 1 456 1         #  R1 &= 456
02  eqri 1 72 1          #  R1 = R1==72
03  addr 1 3 3           ## ip += R1           (if R1==72 then jump 5)
04  seti 0 (0) 3         ## ip = 0             (jump 1)

05  seti 0 (0) 1         #  R1 = 0
06  bori 1 65536 2       #  R2 = R1 | (1<<16)
07  seti 10605201 (9) 1  #  R1 = 10605201
08  bani 2 255 5         #  R5 = R2 & 255     (last 8 bits)
09  addr 1 5 1           #  R1 += R5
10  bani 1 16777215 1    #  R1 &= 16777215    (last 24 bits)
11  muli 1 65899 1       #  R1 *= 65899
12  bani 1 16777215 1    #  R1 &= 16777215    (last 24 bits)
13  gtir 256 2 5         #  R5 = 256>R2
14  addr 5 3 3           ## ip += R5          (if 256>R2 then jump 16)
15  addi 3 1 3           ## ip += 1           (else           jump 17)
16  seti 27 (3) 3        ## ip = 27           (jump 28)
17  seti 0 (3) 5         #  R5 = 0
18  addi 5 1 4           #  R4 = R5+1
19  muli 4 256 4         #  R4 *= 256
20  gtrr 4 2 4           #  R4 = R4>R2        (when true, then R5 = R2>>8)
21  addr 4 3 3           ## ip += R4          (if R4>R2 then jump 23)
22  addi 3 1 3           ## ip += 1           (else          jump 24)
23  seti 25 (3) 3        ## ip = 25           (jump 26)
24  addi 5 1 5           #  R5 += 1
25  seti 17 (5) 3        ## ip = 17           (jump 18)
26  setr 5 (5) 2         #  R2 = R5           (actually R2 >>= 8)
27  seti 7 (6) 3         ## ip = 7            (jump 8)
28  eqrr 1 0 5           #  R5 = R1==R0
29  addr 5 3 3           ## ip += R5          (if R1==R0 the jump 31 -- HALT)
30  seti 5 (8) 3         ## ip = 5            (else          jump 6)

===== BEGIN Title =====
Flipping ranges
=====  END  Title =====


===== BEGIN Statement =====
[[N]] coins numbered from {{0}} to [[N]]{{-1}} are lined up with their <<heads>> side up.

You are given [[Q]] operations, each of which consists in <<flipping>> (heads/tails) all the coins between two indices [[L]] and [[R]] (inclusive).

How many coins have their <<tails>> side up after all the operations have been executed?
=====  END  Statement =====


===== BEGIN Input Description =====
<<Line 1:>> Two space-separated integers [[N]] and [[Q]].
<<Next [[Q]] lines:>> Two space-separated integers [[L]] and [[R]].
=====  END  Input Description =====


===== BEGIN Output Description =====
A single integer corresponding to the number of tails up coins after all the operations.
=====  END  Output Description =====


===== BEGIN Constraints =====
1 ≤ [[N]] ≤ 10^5
1 ≤ [[Q]] ≤ 500
For each operation, 0 ≤ [[L]] ≤ [[R]] < [[N]]
The sum of all the ranges sizes (i.e. ∑ [[R]]-[[L]]+1) does not exceed 2.10^7.
=====  END  Constraints =====


===== BEGIN Input Test 0 =====
10 5
0 1
3 4
2 3
1 8
1 9

=====  END  Input Test 0 =====


===== BEGIN Output Test 0 =====
5

=====  END  Output Test 0 =====


===== BEGIN Input Validator 0 =====
10 5
0 6
0 1
3 3
8 9
0 8

=====  END  Input Validator 0 =====


===== BEGIN Output Validator 0 =====
5

=====  END  Output Validator 0 =====


===== BEGIN Input Test 1 =====
100 10
25 91
83 89
53 69
28 57
35 75
0 97
20 89
43 54
19 35
27 97

=====  END  Input Test 1 =====


===== BEGIN Output Test 1 =====
54

=====  END  Output Test 1 =====


===== BEGIN Input Validator 1 =====
100 10
13 43
11 48
12 45
44 77
5 33
58 93
15 68
10 48
37 70
79 80

=====  END  Input Validator 1 =====


===== BEGIN Output Validator 1 =====
39

=====  END  Output Validator 1 =====


===== BEGIN Input Test 2 =====
1000 100
882 906
370 591
196 721
46 71
233 677
296 791
81 875
238 887
103 389
284 464
650 854
166 373
363 379
214 686
273 718
699 959
73 663
623 650
175 546
250 746
167 473
276 388
655 947
570 704
224 701
332 863
786 794
57 234
32 841
323 824
274 410
67 216
935 965
580 897
322 735
217 671
405 511
905 936
469 658
146 271
142 252
574 762
269 551
598 764
438 919
408 597
224 370
141 521
93 505
48 773
112 881
156 642
163 811
432 696
65 610
390 394
479 610
257 541
566 994
881 965
11 696
117 738
698 906
549 768
273 787
348 656
114 300
161 445
3 464
739 976
736 896
269 995
512 780
182 519
108 934
640 891
305 861
519 654
203 623
156 382
165 780
552 976
797 944
543 940
0 613
331 500
19 114
371 951
851 899
314 826
59 245
246 899
580 969
80 87
497 749
70 835
545 778
128 784
131 675
486 969

=====  END  Input Test 2 =====


===== BEGIN Output Test 2 =====
468

=====  END  Output Test 2 =====


===== BEGIN Input Validator 2 =====
1000 100
169 562
271 540
621 893
433 987
216 951
552 773
706 747
205 730
319 408
665 687
382 448
529 921
123 462
230 253
65 346
21 602
235 567
225 602
7 72
646 724
60 234
69 927
32 880
72 338
243 526
285 685
219 497
135 552
740 957
584 903
484 590
248 803
484 826
194 416
96 99
441 674
362 433
420 478
746 884
55 689
661 669
62 100
412 745
347 819
111 882
196 254
194 549
143 459
187 432
285 473
255 895
77 945
453 827
876 882
100 563
51 667
553 856
15 992
95 948
771 869
170 242
416 497
218 492
410 885
60 924
168 388
2 399
271 948
802 803
292 465
433 713
748 980
569 802
677 735
158 498
194 303
222 991
59 593
555 753
62 765
58 321
51 598
488 514
873 941
161 543
58 983
82 520
190 871
70 609
69 691
240 882
122 413
911 964
252 583
592 608
40 634
83 429
597 673
535 578
323 957

=====  END  Input Validator 2 =====


===== BEGIN Output Validator 2 =====
486

=====  END  Output Validator 2 =====


===== BEGIN Input Test 3 =====
100000 500
26772 34179
87782 93872
31285 41180
34814 51876
17154 88039
39321 84607
41441 59929
9508 98548
1220 60068
73792 81416
9602 13104
27938 70468
34760 66307
17361 45745
9016 32018
37353 48434
20676 57433
71200 92214
39651 80173
69329 85717
1025 87538
39240 72692
13577 86951
17601 34664
14029 15129
72512 97310
20374 35697
36930 79276
27607 94058
26685 44942
83130 90111
34600 66244
32914 64032
6658 12097
55518 83136
5778 36265
464 43719
17146 83507
21178 34335
57912 97154
72309 92493
56057 73519
1267 14663
9862 90573
19536 71511
4722 48393
72420 76350
19410 56333
5482 16704
40404 47795
5229 46898
27535 89399
32706 87416
13473 46357
53264 73385
81351 98235
20257 31029
21299 23206
3248 54040
23509 96542
43540 53964
87806 96345
32527 34970
20866 91917
14168 50140
5075 61694
26158 29154
45830 60332
29831 40001
3101 29219
25313 86511
43025 52227
9099 36517
36585 46025
66768 84080
52386 89065
43404 70282
3617 15118
23405 34237
34795 76099
5014 14208
56959 78193
45309 95491
41114 57199
67033 79457
15157 50488
24914 75574
5817 33386
57154 92901
221 68146
70575 90027
94297 97248
87900 96605
25825 47739
9171 56531
43279 87062
41145 81678
16334 86951
39363 94339
40538 66469
53528 87410
42753 52743
38752 91384
16683 72667
25144 55108
49695 87153
88777 98059
22810 80676
39446 74593
53225 71819
53 39829
27549 37606
56346 76019
79516 85813
42237 60946
57905 57954
28010 88555
62021 67000
22241 96463
11114 86356
37196 67561
82960 87012
43933 81167
12240 98453
30784 88184
29444 40687
19313 26100
3201 6057
32092 62277
9545 80120
54321 59692
75454 82544
25485 94155
50328 91272
52383 64799
19342 31979
85990 90128
726 98430
13970 55724
23053 28683
67889 91214
6582 60889
32662 73060
15906 59829
17477 60901
69616 87500
73259 78047
41588 98992
58008 80301
66162 94276
55933 71810
20861 58446
62216 97472
33972 58991
32406 98536
36347 83579
63517 68327
31358 82149
35992 57654
10155 93525
30735 37450
35614 44020
41904 70798
10561 18136
19769 30311
50205 90957
20028 92591
8418 28043
53424 54377
43369 71121
54496 61069
8161 27110
51049 55069
76556 91163
2560 75456
49857 62518
772 46105
39139 98759
51116 54921
70545 97978
71582 96289
28906 79069
28760 63993
35774 57125
3804 63654
44057 50968
87670 89016
52994 94919
21632 61261
16728 81560
3534 70008
51645 77580
73975 86900
3552 11003
56179 84246
17786 60515
6590 23819
34099 49689
27742 42906
42840 59598
44236 99775
36471 49692
55255 98567
10735 33065
2540 61644
70702 98176
6826 45870
29389 85215
8993 85426
5276 98858
4067 32411
2671 26130
19973 81439
16544 31266
62070 87747
14993 73920
28569 60952
33586 91680
21992 48351
79415 79593
94156 98032
15012 21465
14168 40768
3365 75849
40888 75470
49192 88781
51990 93718
9961 25995
77607 90520
31830 82213
13356 91382
39529 89687
15866 78697
5383 74177
45508 69827
56148 86706
9038 48571
66317 84874
1658 44725
55057 64251
13833 56822
47472 83307
60258 92708
20052 57080
23086 96180
68386 85256
35400 80728
63372 70539
57091 60931
77656 95817
35179 42245
11359 32177
36559 59087
31963 98366
60910 74691
79997 87580
44092 49674
3761 64789
23834 42600
27802 63904
33862 46507
36655 44608
78139 91905
36211 72848
1330 67715
11221 25042
31635 94381
53271 64038
72768 99374
31499 90519
62402 84659
64332 93302
2260 58743
12196 38566
29045 53005
31890 90673
40135 87026
48368 76225
62031 72544
45056 69588
55771 97771
43357 72140
46112 92124
35509 59473
32951 40189
15814 30217
25242 94540
15670 41359
70236 97370
90461 99901
24267 25105
28361 96810
36241 63464
77278 94972
68765 99641
37093 78222
13176 25443
29816 38829
23519 47301
1854 39618
70010 92801
16591 35954
5965 7146
38290 72529
16551 91411
83606 98669
13446 64340
1607 75243
37268 61524
57733 62746
24164 44657
6734 33092
14953 62616
8564 52521
9710 64454
75631 82502
7026 89974
19555 19887
39824 73772
11164 32530
15525 73147
54548 79471
78135 81057
29581 68494
49856 59049
38974 58028
56207 77139
40026 74531
7894 81399
79905 97004
13006 99973
27235 81987
27659 34687
10641 86563
20585 31439
22782 72350
9838 20517
350 53545
59048 90357
61592 77832
4278 38175
30340 37762
37056 92662
59510 92141
9329 90096
30595 34675
77304 81927
25928 86662
15043 55723
29466 71376
19528 84886
18643 34816
7816 9359
21747 40319
77993 98167
37828 74607
16299 57560
61433 90266
39857 91715
35683 52757
65597 70776
57377 64722
10543 78385
5224 56626
42247 96276
32816 79129
3390 11970
30005 88381
75392 76955
2719 88117
35325 75529
5273 99125
22962 61669
68021 85394
36458 57963
23788 76720
57132 83202
11959 64451
45607 61605
43687 53523
42081 87835
13710 21079
43228 53955
64942 90921
37777 86846
52488 99680
4809 72102
11542 59614
33082 41224
15194 42372
52976 67449
150 86200
60552 71118
7104 54165
24586 67952
47419 81609
65338 99148
57939 81973
6764 99613
26680 35003
17172 71987
37752 57424
63532 91521
3783 15915
79806 82578
31365 93032
20758 40730
1792 72199
53476 72384
12217 29451
14871 60482
15396 84896
20181 65323
38254 93926
66698 92459
35838 54459
61894 63242
31946 59871
18958 72255
24983 50277
66616 78561
17892 97818
9150 36208
44548 54387
35018 66550
336 37072
39132 95164
76011 76931
64178 86499
19476 58529
63483 70592
43573 45236
72340 99991
49441 71228
42176 59682
24727 91422
31300 74946
30613 50196
5720 53841
41704 97609
61993 92435
49968 50604
85461 86991
19936 64923
4852 16547
65836 77356
13154 43515
13069 57711
59890 68937
2011 94692
18894 53736
20232 85823
9807 61537
34737 44375
81691 90794
52098 85175
10527 43065
69942 88389
41505 49808
82155 94203
63956 99536
4705 70912
8968 80931
30771 82727
37667 89705
29817 97880
11846 56881
12903 99663
83066 92260
13173 58153
21805 90964
3794 39251
6028 42516
7355 38452
46984 49131
19080 56450
32007 69621
54008 74177
23600 89364
22280 22946
10350 79887
50140 81226
31566 89539
65230 76435
18758 30433
60443 83611
33289 60236
33466 87404
1231 60981
37700 88815
20706 71643
9681 57898
45293 77014
39210 83746
55615 90480
32780 59878
26111 39599
50422 63335
13979 31091
49986 74963

=====  END  Input Test 3 =====


===== BEGIN Output Test 3 =====
51590

=====  END  Output Test 3 =====


===== BEGIN Input Validator 3 =====
100000 500
47049 75341
38780 91655
2875 38696
51879 86275
1061 35976
74177 89889
6428 97605
79482 97671
37512 65107
30162 79569
28705 46179
24920 83442
32850 81381
88835 99035
86400 94493
17927 89241
12735 82345
82242 84717
5167 40492
4373 57779
47823 75965
17224 95991
11813 38680
42823 97973
23021 54460
17322 26318
47953 70701
65771 69579
21567 35720
33681 63156
38684 97853
15095 44396
9869 61385
18449 98848
29571 88647
88395 94924
52089 73048
11836 47942
1824 51717
34663 70329
16199 59609
48311 88188
88125 98174
34362 76619
49941 83695
14201 48689
30647 88452
3280 61797
73584 81205
42992 79964
29015 84889
8285 83283
60852 91891
39608 85097
15292 53516
5943 18320
4877 39893
15220 64569
12739 30775
17781 70457
50940 59459
48629 87881
91289 97404
54935 70804
76983 97290
20253 95236
54379 85841
12978 64139
53492 80694
4288 36666
48566 90476
28477 58115
30947 58287
13022 47537
48147 89873
71364 84518
7936 47012
36160 52184
16011 24878
12015 59600
27801 86870
83819 84109
2799 78269
6629 43713
16505 31925
26896 74000
8992 72641
27152 76858
28305 30539
19340 43064
371 78116
18964 36342
17038 70807
22871 32853
14408 86646
3379 17275
1947 46955
31186 77182
2068 42437
22838 34782
6868 16614
55176 97218
14896 68955
8330 97735
58756 62422
47453 67271
14293 77812
59245 66039
29038 80623
5683 95321
68347 86363
39535 60036
4082 84323
7972 62781
52640 55872
14150 89928
64260 93375
9632 58138
10589 42219
19442 79730
8609 16540
36046 81830
76724 82978
71874 93343
42622 49925
69541 78301
38652 59469
66263 79354
12999 56387
14996 91983
85316 85814
72264 94481
28183 56370
29949 59186
44424 54239
52262 59441
54524 95631
12463 40966
40963 55936
33408 87177
20006 49060
62163 90023
8799 11957
11188 12219
12656 56606
96835 97594
17054 48843
7861 72924
73608 76869
43207 73620
16021 87819
46346 53845
87207 98341
55435 94510
6743 37700
40953 78696
13579 46090
66507 75748
20280 27884
63201 86079
14184 29392
45890 72910
15058 48176
36512 99956
29643 75248
56244 73526
80422 81490
84239 88470
3441 72972
79822 86223
35054 90894
3794 23647
35818 92104
40499 99930
44541 46009
800 23777
18776 74228
52531 86159
9120 18595
82991 97120
4018 12026
69531 97794
28197 49308
55028 59460
20631 44681
40846 48503
42517 94581
74395 78148
6895 11135
20392 20632
80981 98885
6522 88338
10693 35665
58079 86761
55576 63656
57939 79570
35804 54287
28255 98951
14918 67154
45242 56349
14534 37125
88895 88930
63783 77743
69066 87442
5952 40425
28903 51807
7180 78554
1007 26794
27686 39507
17987 33491
37938 43007
1013 15726
65193 97912
23028 56446
16932 49834
69806 92231
30161 65570
73233 87562
9447 46421
52044 97260
5544 57176
2456 60260
10205 41033
56267 75465
53008 75156
83904 92995
37947 54747
15096 53088
2733 42568
22527 81018
60305 90388
11551 47428
13875 57240
31891 57104
52487 77184
10308 68676
40668 51873
44500 97754
29041 43655
10011 22037
66910 82998
14945 69547
25415 66840
45793 46019
84599 95339
19358 30968
13474 19194
25856 33550
22740 78957
20036 99642
85918 99503
9876 23218
64764 82306
60811 98886
73889 99598
58838 75952
73989 89277
83269 84278
42363 81857
41436 82210
19786 57640
8950 61462
57961 82756
36002 39691
7362 77518
46129 66497
9724 40685
59233 60521
4929 7456
37627 48331
10057 84497
11835 80610
66462 77867
50394 60648
72655 76064
5376 96851
58947 74928
24672 85437
42143 79299
62341 65715
8109 19773
13566 59050
45015 93626
11053 66132
22617 84689
5130 32472
57377 92749
57595 68690
68517 79928
20807 47696
37079 48870
50779 53578
44350 88984
6863 78366
82691 84843
8639 43863
12387 43213
73133 88916
37243 50667
33029 94861
78997 86057
19709 43694
10682 76380
18537 86980
40662 45851
85990 91551
51374 86787
16901 77993
11104 92908
40577 73259
49372 84343
16750 43054
87833 92121
89838 96832
12249 68995
84675 87878
55496 66648
2389 47425
40483 47526
23627 28074
44791 63736
25166 29693
18030 20308
10114 38770
13256 66543
70748 96815
4947 69013
44140 86760
17176 81006
49377 78282
20218 21266
23703 90812
21697 81885
57366 94526
5726 53852
47749 88652
31133 94317
58222 80031
37346 98617
58841 98112
30671 69993
31348 40562
25430 61474
48213 88907
57749 74766
36932 60513
50052 65916
54874 69135
21241 26174
18140 79254
6839 32768
62991 84040
48655 72684
13446 93244
16341 67621
10993 37363
21012 35755
58893 67286
19313 57340
12021 29102
45820 59130
3495 54381
6980 51964
49015 65799
30903 50615
10696 49140
3694 29430
12987 41770
85191 93677
19142 43947
5020 18035
37601 61925
18191 91235
92476 99462
58799 61487
688 80654
2490 10384
28266 33544
19597 71932
79807 95320
55476 69176
14573 37762
31147 39472
6258 15970
31252 55027
81633 83748
8232 59914
14530 65513
70261 78215
2154 82831
67551 75372
31711 94181
18818 38177
205 56261
46244 80584
31531 74798
24551 54600
87080 87584
11221 68614
8870 47265
68951 71313
66496 66535
2665 72633
51177 61621
5706 83318
48929 50709
33246 97952
2128 46805
8855 45193
31604 96068
82346 86127
13587 76271
96362 99179
17486 43583
5811 46176
44374 71567
22949 84252
60899 89742
62722 91146
23891 82802
8270 17675
59988 93853
4847 38462
5741 26422
5492 26144
40642 41365
52196 67552
62049 71176
4799 33202
84790 98735
25048 37501
6265 46789
43506 85948
16315 35811
48237 57272
52431 97426
50678 57637
24486 44438
65038 90710
48148 65211
34959 68062
10828 95300
10345 55640
56440 78964
23652 71496
38504 42101
10494 13447
42981 86628
38750 40173
58447 78986
55851 94065
21842 90408
46077 58183
5551 58606
46210 95265
57008 80589
35986 83816
7518 9835
83560 87973
47619 53242
67251 98290
20969 89051
4081 18714
79635 88878
4561 57432
8812 16545
30932 84562
47467 48015
50181 74349
4244 79310
20111 89006
48623 58972
48760 58188
10077 75225
18047 69397
48096 52171
41207 85139
32717 36528
3396 14869
24385 96426
65410 67861
50723 73619
15435 34311
34116 92279
28124 58493
37431 80199
64382 90961
16074 26237
9706 17790
22630 59250
58341 93502
11506 89381
41889 87535
45537 93000
8511 72089
38058 71063
20644 39315
93003 93298
83584 91779
22818 47381

=====  END  Input Validator 3 =====


===== BEGIN Output Validator 3 =====
49509

=====  END  Output Validator 3 =====


===== BEGIN Solution Language =====
string:Python3
=====  END  Solution Language =====


===== BEGIN Solution =====
# /!\ TWO DISTINCT SOLUTIONS GIVEN BELOW


# O(N+Q) approach, O(N) space
N,Q = map(int,input().split())
A = [0]*N
for _ in range(Q):
    L,R = map(int,input().split())
    A[L] += 1
    if R+1<N:
        A[R+1] -= 1

x = res = 0
for i in range(N):
    x += A[i]
    res += x%2
print(res)


quit()


# O(N + Q log Q) approach, O(Q) space
N,Q = map(int,input().split())
LR = []
for _ in range(Q):
    L,R = map(int,input().split())
    LR.append((L,1))
    LR.append((R+1,-1))
LR.sort()

j = cnt = res = 0
for i in range(N):
    while j<len(LR) and LR[j][0]<=i:
        cnt += LR[j][1]
        j += 1
    res += cnt%2
print(res)


=====  END  Solution =====


===== BEGIN Stub =====
read N:int Q:int
loop Q read L:int R:int
write 0
=====  END  Stub =====


